{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/body/QR/personenscan/personenscan.component.css","webpack:///./src/app/body/QR/personenscan/personenscan.component.html","webpack:///./src/app/body/QR/personenscan/personenscan.component.ts","webpack:///./src/app/body/QR/qrgenerator/qrgenerator.component.css","webpack:///./src/app/body/QR/qrgenerator/qrgenerator.component.html","webpack:///./src/app/body/QR/qrgenerator/qrgenerator.component.ts","webpack:///./src/app/body/QR/qrscanner/qrscanner.component.css","webpack:///./src/app/body/QR/qrscanner/qrscanner.component.html","webpack:///./src/app/body/QR/qrscanner/qrscanner.component.ts","webpack:///./src/app/body/aufgabe/aufgabe.component.css","webpack:///./src/app/body/aufgabe/aufgabe.component.html","webpack:///./src/app/body/aufgabe/aufgabe.component.ts","webpack:///./src/app/body/body.css","webpack:///./src/app/body/events/editevent/editevent.component.css","webpack:///./src/app/body/events/editevent/editevent.component.html","webpack:///./src/app/body/events/editevent/editevent.component.ts","webpack:///./src/app/body/events/eventliste/eventliste.component.css","webpack:///./src/app/body/events/eventliste/eventliste.component.html","webpack:///./src/app/body/events/eventliste/eventliste.component.ts","webpack:///./src/app/body/person/editperson/editperson.component.css","webpack:///./src/app/body/person/editperson/editperson.component.html","webpack:///./src/app/body/person/editperson/editperson.component.ts","webpack:///./src/app/body/person/personenliste/personenliste.component.css","webpack:///./src/app/body/person/personenliste/personenliste.component.html","webpack:///./src/app/body/person/personenliste/personenliste.component.ts","webpack:///./src/app/event.ts","webpack:///./src/app/eventloader.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/header/kontakt/kontakt.component.css","webpack:///./src/app/header/kontakt/kontakt.component.html","webpack:///./src/app/header/kontakt/kontakt.component.ts","webpack:///./src/app/header/login/login.component.css","webpack:///./src/app/header/login/login.component.html","webpack:///./src/app/header/login/login.component.ts","webpack:///./src/app/header/menu/menu.component.css","webpack:///./src/app/header/menu/menu.component.html","webpack:///./src/app/header/menu/menu.component.ts","webpack:///./src/app/in-memory-data.service.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/person.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AufgabeComponent } from './body/aufgabe/aufgabe.component';\nimport { EventlisteComponent } from './body/events/eventliste/eventliste.component';\nimport { LoginComponent } from './header/login/login.component';\nimport { PersonenlisteComponent } from './body/person/personenliste/personenliste.component';\nimport { EditeventComponent } from './body/events/editevent/editevent.component';\nimport { QrgeneratorComponent } from './body/QR/qrgenerator/qrgenerator.component';\nimport { QrscannerComponent } from './body/QR/qrscanner/qrscanner.component';\nimport { PersonenscanComponent } from './body/QR/personenscan/personenscan.component';\nimport { EditpersonComponent } from './body/person/editperson/editperson.component';\nimport { KontaktComponent } from './header/kontakt/kontakt.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/aufgabe', pathMatch: 'full' },\n  { path: 'aufgabe', component: AufgabeComponent },\n  { path: 'eventliste', component: EventlisteComponent },\n  { path: 'personenliste', component: PersonenlisteComponent },\n  { path: 'editevent/:id', component: EditeventComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'qrgenerator', component: QrgeneratorComponent },\n  { path: 'qrscanner', component: QrscannerComponent },\n  { path: 'personenscan/:id', component: PersonenscanComponent },\n  { path: 'editperson/:id', component: EditpersonComponent },\n  { path: 'kontakt', component: KontaktComponent },\n  \n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"h1 {\\r\\n  color: #006400;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 250%;\\r\\n  margin-top: 5px;\\r\\n  margin-right: 0px;\\r\\n  margin-bottom: 0px;\\r\\n  margin-left: 0p;\\r\\n}\\r\\n\\r\\nh2, h3 {\\r\\n  color: #228B22;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-weight: lighter;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  margin: 2em;\\r\\n}\\r\\n\\r\\nbody, input[text], button {\\r\\n  color: #888;\\r\\n  font-family: Cambria, Georgia;\\r\\n}\\r\\n\\r\\n/* everywhere else */\\r\\n\\r\\n* {\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n}\\r\\n\\r\\n/* Router Elemente */\\r\\n\\r\\nnav a {\\r\\n  padding: 5px 10px;\\r\\n  text-decoration: none;\\r\\n  margin-top: 10px;\\r\\n  display: inline-block;\\r\\n  background-color: YellowGreen;\\r\\n  border-radius: 4px;\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\\r\\nnav a:visited, a:link {\\r\\n  color: #607d8b;\\r\\n}\\r\\n\\r\\nnav a:hover {\\r\\n  color: #FFFFFF;\\r\\n  background-color: #006400;\\r\\n}\\r\\n\\r\\nnav\\r\\n a.active {\\r\\n  color: #039be5;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n\\tmargin: 2px;\\r\\n}\\r\\n\\r\\ndiv {\\r\\n/*\\tborder: 1px solid blue; */\\r\\n}\\r\\n\\r\\n.TODO {\\r\\n\\tcolor:red;\\r\\n}\\r\\n\"","module.exports = \"<head>\\n\\t<meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=utf-8\\\">\\n</head>\\n\\n<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"/node_modules/primeicons/primeicons.css\\\" />\\n<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"/node_modules/primeng/resources/themes/omega/theme.css\\\" />\\n<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"/node_modules/primeng/resources/primeng.min.css\\\" />\\n<link href=\\\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\\\" rel=\\\"stylesheet\\\">\\n\\n<div class=\\\"ui-g body\\\">\\n\\n\\t<!-- Headerzeile -->\\n\\t<div class=\\\"ui-g-12 header\\\" style=\\\"background-color: lightgreen\\\">\\n        <app-header></app-header>\\n    </div>\\n\\t\\n\\t<!-- Body -->\\n    <div class=\\\"ui-g-12 body\\\">\\n    \\t<router-outlet></router-outlet>\\n    </div>\\n    \\n    <!-- Footer -->\\n    <div class=\\\"ui-g-12\\\"  style=\\\"background-color: lightgreen\\\">\\n        <app-messages></app-messages>\\n    </div>\\n    \\n</div>\\n\"","import { Component, NgModule } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'easyBall';\n}\n","/* angular */\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n/* PrimeNG */\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {    InputTextModule, \n            ButtonModule,\n            DropdownModule,\n            SliderModule } from 'primeng/primeng';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { TableModule } from 'primeng/table';\nimport { CalendarModule } from 'primeng/calendar';\nimport { TieredMenuModule } from 'primeng/tieredmenu';\nimport { PanelMenuModule } from 'primeng/panelmenu';\nimport { MenuModule } from 'primeng/menu';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { DialogModule } from 'primeng/dialog';\n\n/* In-Memory-Web-API */\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\n\n/* QR Codes */\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { NgQRCodeReaderModule } from 'ng2-qrcode-reader';\nimport { NgQrScannerModule } from 'angular2-qrscanner';\nimport { Subject } from 'rxjs';\n\n/* die eigenen Komponenten importieren */\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AufgabeComponent } from './body/aufgabe/aufgabe.component';\nimport { EventlisteComponent } from './body/events/eventliste/eventliste.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { PersonenlisteComponent } from './body/person/personenliste/personenliste.component';\nimport { LoginComponent } from './header/login/login.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { EditeventComponent } from './body/events/editevent/editevent.component';\nimport { QrgeneratorComponent } from './body/QR/qrgenerator/qrgenerator.component';\nimport { QrscannerComponent } from './body/QR/qrscanner/qrscanner.component';\nimport { PersonenscanComponent } from './body/QR/personenscan/personenscan.component';\nimport { EditpersonComponent } from './body/person/editperson/editperson.component';\nimport { MenuComponent } from './header/menu/menu.component';\nimport { KontaktComponent } from './header/kontakt/kontakt.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    AufgabeComponent,\n    EventlisteComponent,\n    LoginComponent,\n    MessagesComponent,\n    PersonenlisteComponent,\n    EditeventComponent,\n    PersonenscanComponent,\n    EditpersonComponent,\n    \n    // QR\n    QrgeneratorComponent,\n    QrscannerComponent,\n    \n    // PrimeNG\n    MenuComponent,\n    KontaktComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    \n    // QR\n    QRCodeModule,\n    NgQrScannerModule,\n    NgQRCodeReaderModule,\n    \n    // PrimeNG\n    ButtonModule,\n    PanelMenuModule,\n    TieredMenuModule,\n    AppRoutingModule,\n    MenuModule,\n    ToolbarModule,\n    InputMaskModule,\n    MultiSelectModule,\n    TableModule,\n    DropdownModule,\n    TabMenuModule,\n    CalendarModule,\n    InputTextModule,\n    DialogModule,\n    SliderModule,\n    \n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    HttpClientInMemoryWebApiModule.forRoot(\n        InMemoryDataService, { dataEncapsulation: false }\n      ),\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n  \nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  getUserDetails(nutzer, pw) {\n    // post these details to API server and return user info if correct\n    return this.http.post('http://127.0.0.1:80/api/auth.php', {\n      nutzer,\n      pw\n    }, httpOptions).subscribe(data => {\n      console.log(data, ' vom Server erhalten');\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<head>\\n\\t<meta http-equiv='content-type' content ='text/html; charset=utf-8'>\\n</head>\\n\\n<div *ngIf=\\\"person\\\">\\n\\t<div class=\\\"text\\\">\\n\\t\\t<h2>{{person.vname}} {{person.nname}} Details</h2>\\n\\t\\n\\t\\t<p>Hier können nach einem erfolgreichen Scan Personendaten am Eingang des Events eingesehen und überprüft werden.</p>\\n\\t</div>\\n\\t\\n\\t<div>\\n\\t\\n\\t\\t<!-- Bild -->\\n\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-3 ui-md-4 ui-sm-4\\\">\\n\\t\\t\\t<img src='{{person.imgurl}}' style=\\\"width:100%\\\">\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Informationen -->\\n\\t\\t<div class=\\\"ui-g-10\\\" id=\\\"infos\\\">\\n\\t\\t\\n\\t\\t\\t<div class=\\\"ui-g\\\">\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-5\\\" align=\\\"right\\\">Vorname:</div>\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-8\\\">{{person.vname}}</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"ui-g\\\">\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-5\\\" align=\\\"right\\\">Nachname:</div>\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-8\\\">{{person.nname}}</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"ui-g\\\">\\t\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-5\\\" align=\\\"right\\\">Firma:</div>\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-8\\\">{{person.firma}}</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"ui-g\\\">\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-5\\\" align=\\\"right\\\">Freigeschaltet:</div>\\n\\t\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-1 ui-l-2 ui-lg-2 ui-md-3 ui-sm-8\\\" [ngClass]=\\\"person.darf ? null : 'schlecht'\\\">{{person.darf}}</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"ui-g\\\">\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-5\\\" align=\\\"right\\\">VIP:</div>\\n\\t\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-1 ui-l-2 ui-lg-2 ui-md-3 ui-sm-8\\\" [ngClass]=\\\"person.vip ? 'gut' : null\\\">{{person.vip}}</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"ui-g\\\">\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-5\\\" align=\\\"right\\\">Gescannt:</div>\\n\\t\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-1 ui-l-2 ui-lg-2 ui-md-3 ui-sm-8\\\"  [ngClass]=\\\"person.gescannt ? 'schlecht': null\\\">{{person.gescannt}}</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<!-- Ungültiger QR-Code -->\\n\\t\\t\\t<div *ngIf=\\\"person.gescannt\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"pi pi-exclamation-triangle\\\" class=ui-button-danger label=\\\"Code wurde bereits gescannt !\\\"></button>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<!-- GinTonic -->\\n\\t\\t\\t<div *ngIf=\\\"person.gescannt == false\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" pButton class=ui-button-success label=\\\"Der Code ist gültig.\\\"></button>\\n\\t\\t\\t\\t<div *ngIf=\\\"person.vip\\\">\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton class=ui-button-warning label=\\\"Dem Gast einen GinTonic ausgeben !\\\"></button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n\\t<!-- Button: Nächster Scan -->\\n\\t<div class=\\\"ui-g-12\\\">\\n\\t\\t<a routerLink=\\\"/qrscanner\\\">\\n\\t\\t\\t<button pButton type=\\\"button\\\" label=\\\"Nächster Scan\\\" class=\\\"ui-button-warning ui-g-12\\\" align=\\\"center\\\"></button>\\n\\t\\t</a>\\n\\t</div>  \\n</div>\\n\\n\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Person } from '../../../person';\nimport { EventloaderService } from './../../../eventloader.service';\n\n@Component({\n  selector: 'app-personenscan',\n  templateUrl: './personenscan.component.html',\n  styleUrls: ['./personenscan.component.css', './../../../app.component.css', './../../body.css']\n})\n  \nexport class PersonenscanComponent implements OnInit {\n  \n  @Input() person: Person;\n\n  constructor(  private route: ActivatedRoute,\n                private eventloaderservice: EventloaderService,\n                private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    this.getPerson();\n\n  }\n\n  getPerson(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.eventloaderservice.getPerson(id).subscribe(person1 => this.person = person1);\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<head>\\n\\t<meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=utf-8\\\">\\n</head>\\n\\n<div class=\\\"text\\\">\\n\\t<h2>QR-Code</h2>\\n</div>\\n\\n<div id=\\\"Grafik\\\">\\n\\t<qrcode [qrdata]=\\\"qrdata\\\" [size]=\\\"256\\\" [level]=\\\"'M'\\\"></qrcode>\\n</div>\\n\\n<br>\\n\\n<div id=\\\"text\\\">\\n\\tID der Person eingeben: <input pInputText [(ngModel)]=\\\"qrdata\\\" placeholder=\\\"Personen-ID\\\" size=\\\"10\\\">\\n</div>\\n\\n<div id=\\\"buttons\\\">\\t\\n\\t<button pButton type=\\\"button\\\" class=\\\"ui-button-success\\\" label=\\\"ID=0 (Bud)\\\" (click)=\\\"changeValue('0')\\\"></button>\\n\\t<button pButton type=\\\"button\\\" class=\\\"ui-button-warning\\\" label=\\\"ID=1 (Dave)\\\" (click)=\\\"changeValue('1')\\\"></button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nexport class NgxQrCode {\n  text: string;\n}\n\n@Component({\n  selector: 'app-qrgenerator',\n  templateUrl: './qrgenerator.component.html',\n  styleUrls: ['./qrgenerator.component.css', './../../../app.component.css', './../../body.css']\n})\n  \nexport class QrgeneratorComponent implements OnInit {\n  \n  public qrdata: string = null;\n\n  constructor() {\n    console.log('QRGenerator gestartet');\n    this.qrdata = '0';\n  }\n\n  ngOnInit() {\n  }\n  \n  changeValue( newValue: string ): void {\n    this.qrdata = newValue;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<head>\\r\\n\\t<meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=utf-8\\\">\\r\\n</head>\\r\\n\\r\\n<div class=\\\"text\\\">\\r\\n\\t<h2>QR-Code Scanner</h2>\\r\\n\\t<p>Scan: {{result}}</p>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"ui-g-5 ui-xl-5 ui-l-7 ui-lg-9 ui-md-12 ui-sm-12\\\">\\r\\n\\t<qr-scanner [debug]=\\\"false\\\" [canvasWidth]=\\\"1080\\\" [canvasHeight]=\\\"720\\\" [stopAfterScan]=\\\"true\\\" [updateTime]=\\\"500\\\"></qr-scanner>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, ViewChild, Renderer2,  OnInit} from '@angular/core';\r\nimport { QrScannerComponent } from 'angular2-qrscanner';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-qrscanner',\r\n  templateUrl: './qrscanner.component.html',\r\n  styleUrls: ['./qrscanner.component.css', './../../../app.component.css', './../../body.css'],\r\n})\r\n  \r\nexport class QrscannerComponent implements OnInit {\r\n\r\n  result: string;\r\n  fail: boolean;\r\n  \r\n  @ViewChild('result') resultElement: ElementRef;\r\n    \r\n  @ViewChild(QrScannerComponent) qrScannerComponent: QrScannerComponent ;\r\n \r\n  ngOnInit() {\r\n    this.fail = false;\r\n    \r\n    this.qrScannerComponent.getMediaDevices().then(devices => {\r\n        console.log(devices);\r\n        const videoDevices: MediaDeviceInfo[] = [];\r\n        for (const device of devices) {\r\n            if (device.kind.toString() === 'videoinput') {\r\n                videoDevices.push(device);\r\n            }\r\n        }\r\n        if (videoDevices.length > 0) {\r\n            let choosenDev;\r\n            for (const dev of videoDevices) {\r\n                if (dev.label.includes('front')) {\r\n                    choosenDev = dev;\r\n                    break;\r\n                }\r\n            }\r\n            if (choosenDev) {\r\n                this.qrScannerComponent.chooseCamera.next(choosenDev);\r\n            } else {\r\n                this.qrScannerComponent.chooseCamera.next(videoDevices[0]);\r\n            }\r\n        }  \r\n    });\r\n \r\n    this.qrScannerComponent.capturedQr.subscribe(result => {\r\n        console.log(result),\r\n        this.result = result,\r\n        this.showPerson(result);\r\n    }); \r\n  }\r\n    \r\n  constructor( private router: Router ) { \r\n  \r\n  }\r\n  \r\n  showPerson(id: string) {\r\n    this.router.navigate(['/personenscan/'.concat(this.result)]).catch();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<head>\\r\\n\\t<meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=utf-8\\\">\\r\\n</head>\\r\\n\\r\\n\\r\\n<!-- Hier fest einfügen wegen Formatierung und Übersichtlichkeit -->\\r\\n<div>\\r\\n\\t<p>Folgende halbwegs kryptische Anfrage haben wir:</p>\\r\\n\\t<p>\\\"Eventeinladungen 4.0\\\" :)</p>\\r\\n\\t\\r\\n\\t<p>Für ein Event (an Bord, Land, Messe,..) sollen Einladungen per Mail verschickt werden, die einen QR Code beinhalten, der beim Empfang gescannt wird, um nachzuvollziehen welcher Gast auf dem Event war.</p>\\r\\n\\t\\r\\n\\t<p>Anforderung des fiktiven \\\"Kunden\\\":</p>\\r\\n\\t\\r\\n\\t<ul>\\r\\n\\t\\r\\n\\t\\t<li>Login in geschützten Bereich</li>\\r\\n\\t\\t<li>Liste an Personen verwalten (CRUD – Create, Read, Update, Delete)\\r\\n\\t\\t\\t<ul>\\r\\n\\t\\t\\t\\t<li>Min. Vorname, Nachname, E-Mail, Firma, Foto</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</li>\\r\\n\\t\\t<li>Personen können sich auf einer ungeschützten Webseite für das System anmelden und ihre Daten eintragen. Diese Personen müssen erst im System freigeschaltet werden.</li>\\r\\n\\t\\t<li>E-Mail mit Einladung und QR Code pro Person zum Event, wenn Personen im System erstellt werden, oder freigeschaltet wurden</li>\\r\\n\\t\\t<li>QR Code soll irgendwie durch ein Gerät, Handy, Pi,... eingescannt werden können und dabei soll der Name + Foto sichtbar sein, um die Person zu identifizieren</li>\\r\\n\\t\\t<li>Jeder Code darf nur einmal gescannt werden - danach Hinweis, dass bereits gescannt wurde</li>\\r\\n\\t\\t<li>Eine Auswertung wie viele Codes gescannt wurden und wer da / wer nicht da war</li>\\r\\n\\t</ul>\\r\\n\\t\\r\\n\\t<p>Unsere Wünsche:</p>\\r\\n\\t<ul>\\r\\n\\t\\t<li>Nutzung des Frameworks: <a href=\\\"https://www.primefaces.org/primeng/#/\\\">https://www.primefaces.org/primeng/#/</a> und damit auch Angular</li>\\r\\n\\t\\t<li>Ansonsten hast du absolut freie Hand =)</li>\\r\\n\\t</ul>\\r\\n\\t<p>Zusatzaufgabe 1:</p>\\r\\n\\t<ul>\\r\\n\\t\\t<li>Personen können im System mit einem VIP Status versehen werden. Beim Scannen erhält der Scannende einen Hinweis und verteilt zusätzlich einen Gin Tonic an den Gast</li>\\r\\n\\t</ul>\\r\\n\\t\\r\\n\\t<p>Zusatzaufgabe 2:</p>\\r\\n\\t<ul>\\r\\n\\t\\t<li>Verwaltung von Events (CRUD)\\r\\n\\t\\t\\t<ul>\\r\\n\\t\\t\\t\\t<li>Min. Name, Datum, Ort</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</li>\\r\\n\\t\\t<li>Personen erhalten Einladungen zu einem Event und müssen statt generell für ein entsprechendes Event freigeschaltet werden</li>\\r\\n\\t\\t<li>Auswertung pro Event: wieviele waren da, wer und wer nicht</li>\\r\\n\\t</ul>\\r\\n\\t\\r\\n\\t<p>Enrico Lorenz</p>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { EventloaderService } from '../../eventloader.service';\n\n@Component({\n  selector: 'app-aufgabe',\n  templateUrl: './aufgabe.component.html',\n  styleUrls: ['./../../app.component.css', './aufgabe.component.css', './../body.css']\n})\n\nexport class AufgabeComponent implements OnInit {\n\n  aufgabe: string;\n\n  constructor(private eventloaderService: EventloaderService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"div {\\r\\n/*\\tborder: 1px solid #73AD21; */\\r\\n}\\r\\n\\r\\n.gut {\\r\\n    background-color: green !important;\\r\\n    color: #ffffff !important;\\r\\n}\\r\\n\\r\\n.schlecht {\\r\\n    background-color: red !important;\\r\\n    color: #ffffff !important;\\r\\n}\\r\\n\\r\\n.links {\\r\\n\\t line-height: 29px;\\r\\n}\"","module.exports = \"\"","module.exports = \"<head>\\n\\t<meta http-equiv='content-type' content ='text/html; charset=utf-8'>\\n</head>\\n\\n\\n<div *ngIf=\\\"event\\\">\\n\\t<div id=\\\"text\\\">\\n\\t\\t<h2>{{event.ename}}</h2>\\n\\t\\t\\n\\t\\t<p>Hier können bereits erstellte Events editiert werden.</p>\\n\\t</div>\\n\\t\\n\\t\\t\\n\\t<!-- Informationen -->\\n\\t<div class=\\\"ui-g-10\\\" id=\\\"infos\\\">\\n\\t\\t<div class=\\\"ui-g\\\">\\n\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-2 ui-l-2 ui-lg-3 ui-md-4 ui-sm-5\\\" align=\\\"right\\\">Eventname:</div>\\n\\t\\t\\t<div><input #ename pInputText value=\\\"{{event.ename}}\\\"></div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"ui-g\\\">\\t\\n\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-2 ui-l-2 ui-lg-3 ui-md-4 ui-sm-5\\\" align=\\\"right\\\">Datum</div>\\n\\t\\t\\t<div><input #edatum pInputText value=\\\"{{event.edatum}}\\\"></div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"ui-g\\\">\\t\\n\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-2 ui-l-2 ui-lg-3 ui-md-4 ui-sm-5\\\" align=\\\"right\\\">Ort:</div>\\n\\t\\t\\t<div><input #eort pInputText value=\\\"{{event.eort}}\\\"></div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"ui-g\\\">\\t\\n\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-2 ui-l-2 ui-lg-3 ui-md-4 ui-sm-5\\\" align=\\\"right\\\">ID:</div>\\n\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-1 ui-l-2 ui-lg-2 ui-md-3 ui-sm-3\\\">{{event.id}}</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"ui-g\\\">\\t\\n\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-2 ui-l-2 ui-lg-3 ui-md-4 ui-sm-5\\\" align=\\\"right\\\">Anmeldungen:</div>\\n\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-1 ui-l-2 ui-lg-2 ui-md-3 ui-sm-3\\\">{{event.eanz}}</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"ui-g\\\">\\t\\n\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-2 ui-l-2 ui-lg-3 ui-md-4 ui-sm-5\\\" align=\\\"right\\\">Besucher:</div>\\n\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-1 ui-l-2 ui-lg-2 ui-md-3 ui-sm-3\\\">{{event.besucher}}</div>\\n\\t\\t</div>\\t\\t\\n\\t</div>\\n\\t\\n\\t<!-- Buttons Zurück & Speichern -->\\n\\t<div class=\\\"ui-g-12\\\" style=\\\"margin: 5px\\\" id=\\\"buttons\\\">\\n\\t\\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-arrow-left\\\" label=\\\"Zurück\\\" class=\\\"ui-button-warning\\\" (click)=\\\"goBack()\\\"></button>  \\n\\t\\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-check\\\" label=\\\"Änderung speichern\\\" class=\\\"ui-button-success\\\" (click)=\\\"saveEvent(ename.value , edatum.value, eort.value)\\\"></button>\\n\\t</div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Event } from '../../../event';\nimport { EventloaderService } from '../../../eventloader.service';\n\n@Component({\n  selector: 'app-editevent',\n  templateUrl: './editevent.component.html',\n  styleUrls: ['./editevent.component.css', './../../../app.component.css', './../../body.css']\n})\n\nexport class EditeventComponent implements OnInit {\n\n  datum: string[];\n\n  @Input() event: Event;\n\n  constructor(private route: ActivatedRoute,\n              private eventloaderservice: EventloaderService,\n              private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.getEvent();\n  }\n\n  /* Event laden */\n  getEvent(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.eventloaderservice.getEvent(id).subscribe(event1 => this.event = event1);\n  }\n\n  /* zur vorherigen Seite */\n  goBack(): void {\n    this.location.back();\n  }\n\n  /* �nderungen speichern */\n  saveEvent(name: string, date: string, ort: string ): void {\n    this.event.ename = name;\n    // Datum neu zusammensetzen\n    this.datum = date.split('.');\n    this.event.edatum = this.datum[2] + '-' + // Jahr\n                        this.datum[1] + '-' + // Monat\n                        this.datum[0];        // Tag\n    this.event.eort = ort;\n    this.eventloaderservice.updateEvent(this.event).subscribe(() => this.goBack());\n  }\n\n}\n","module.exports = \"\\r\\n\\r\\n.events {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 50em;\\r\\n}\\r\\n\\r\\n.events li {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  background-color: #EEE;\\r\\n  margin: .5em;\\r\\n  padding: .3em 0;\\r\\n  height: 1.6em;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.events li:hover {\\r\\n  color: #607D8B;\\r\\n  background-color: #DDD;\\r\\n  left: .1em;\\r\\n}\\r\\n\\r\\n.events a {\\r\\n  color: #888;\\r\\n  text-decoration: none;\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 250px;\\r\\n}\\r\\n\\r\\n.events a:hover {\\r\\n  color:#607D8B;\\r\\n}\\r\\n\\r\\n.events .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: relative;\\r\\n  left: -1px;\\r\\n  top: -4px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: right;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 4px 0 0 4px;\\r\\n}\\r\\n\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<head>\\n\\t<meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=utf-8\\\">\\n</head>\\n\\n<div id=\\\"text\\\">\\n\\t<h2>Eventliste</h2>\\n\\t<p>\\n\\t  Liste der eingetragenen Events und Möglichkeite weitere hinzuzufügen.\\n\\t</p>\\n</div>\\n\\n<div style=\\\"margin: 5px\\\" id=\\\"events-tabelle\\\">\\n<p-table [columns]=\\\"selectedColumns\\\" [value]=\\\"events\\\" [autoLayout]=true [responsive]=\\\"true\\\">\\n    \\n    <!-- Select & Suchfeld -->\\n    <ng-template pTemplate=\\\"caption\\\">\\n    \\t<div>\\n\\t    \\t<div style=\\\"text-align:left\\\">\\n\\t            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\n\\t                        selectedItemsLabel=\\\"{0} Spalten ausgewählt\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Wähle Spalten\\\"></p-multiSelect>\\n\\t        </div>\\n\\t        <div style=\\\"text-align: right\\\">        \\n\\t            <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n\\t            <input type=\\\"text\\\" pInputText size=\\\"25\\\" placeholder=\\\"Globaler Filter\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" style=\\\"width:auto\\\">\\n\\t        </div>\\n        </div> \\n    </ng-template>\\n    \\n    <!-- header -->\\n    <ng-template pTemplate=\\\"header\\\" let-columns>\\n        <tr>\\n        \\t<!-- Kopfzeile mit Beschriftung der Spalten -->\\n            <th *ngFor=\\\"let col of columns\\\">\\n                {{col.header}}\\n            </th>\\n        </tr>\\n        <tr>\\n        \\t<!-- Suchfelder der Spalten -->\\n            <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n                <input class=\\\"ui-sm-2 pull-right\\\" *ngSwitchCase=\\\"'id'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\" size=\\\"2\\\">\\n                <input *ngSwitchCase=\\\"'ename'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\" size=\\\"15\\\">\\n                <input *ngSwitchCase=\\\"'edatum'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\" size=\\\"10\\\">\\n                <input *ngSwitchCase=\\\"'eort'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\" size=\\\"15\\\">\\n                <div *ngSwitchCase=\\\"'eanz'\\\">\\n                    mehr als {{anzFilter}}\\n                    <i (click)=\\\"yearFilter=null;dt.filter(null, col.field, col.filterMatchMode)\\\" style=\\\"cursor:pointer\\\" *ngIf=\\\"anzFilter\\\"></i>\\n                    <p-slider [style]=\\\"{'width':'100%','margin-top':'8px'}\\\" [(ngModel)]=\\\"anzFilter\\\" [min]=\\\"0\\\" [max]=\\\"20\\\" (onChange)=\\\"onAnzChange($event, dt)\\\"></p-slider>\\n                </div>\\n                <div *ngSwitchCase=\\\"'besucher'\\\">\\n                    mehr als {{besucherFilter}}\\n                    <i (click)=\\\"yearFilter=null;dt.filter(null, col.field, col.filterMatchMode)\\\" style=\\\"cursor:pointer\\\" *ngIf=\\\"besucherFilter\\\"></i>\\n                    <p-slider [style]=\\\"{'width':'100%','margin-top':'8px'}\\\" [(ngModel)]=\\\"besucherFilter\\\" [min]=\\\"0\\\" [max]=\\\"20\\\" (onChange)=\\\"onBesucherChange($event, dt)\\\"></p-slider>\\n                </div>\\n            </th>\\n        </tr>\\n    </ng-template>\\n\\n    <!-- der eigentliche Inhalt der Tabelle --> \\n    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n        <tr [pSelectableRow]=\\\"rowData\\\" align='center'>\\n            <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n            \\t<span class=\\\"ui-column-title\\\">{{col.header}}</span>\\n            \\t<div *ngSwitchCase=\\\"'id'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\" align='center'>{{rowData[col.field]}}</div>\\n                <div *ngSwitchCase=\\\"'ename'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">{{rowData[col.field]}}</div>\\n                <div *ngSwitchCase=\\\"'edatum'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">{{rowData[col.field]}}</div>\\n                <div *ngSwitchCase=\\\"'eort'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">{{rowData[col.field]}}</div>\\n                <div *ngSwitchCase=\\\"'eanz'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\" align='center'>{{rowData[col.field]}}</div>\\n                <div *ngSwitchCase=\\\"'besucher'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\" align='center'>{{rowData[col.field]}}</div>\\n                <div *ngSwitchCase=\\\"'admin'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\" align='center'>{{rowData[col.field]}}\\n                \\t<a routerLink=\\\"/editevent/{{rowData['id']}}\\\">\\n            \\t\\t\\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-warning\\\"></button>  \\n\\t            \\t</a>  \\n\\t            \\t<a routerLink=\\\"/eventliste\\\" routerLinkActive=\\\"active\\\">        \\n\\t            \\t\\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-times\\\" class=\\\"ui-button-danger\\\" title=\\\"deleteperson\\\" (click)=\\\"delete(rowData['id'])\\\"></button>\\n                \\t</a>\\n                </div>\\n            </td>\\n        </tr>\\n    </ng-template>\\n    \\n    <!-- footer -->\\n\\t<ng-template pTemplate=\\\"summary\\\">\\n        <div style=\\\"text-align:right\\\">\\n        \\n        \\t<div style=\\\"text-align:center\\\">\\n\\t       \\t\\t{{events?.length}} Events\\n\\t\\t\\t</div>\\n\\n            <button type=\\\"button\\\" pButton icon=\\\"fa fa-plus\\\" (click)=\\\"showDialogToAdd()\\\" label=\\\"Event hinzufügen\\\" class=\\\"ui-button-success\\\"></button>\\n        \\n        </div>\\n    </ng-template>\\n    \\n</p-table>\\n</div>\\n\\n<!-- Dialogbox zum Hinzufügen -->\\n<p-dialog header=\\\"Eventdetails\\\" [(visible)]=\\\"displayDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\" [width]=\\\"400\\\">\\n    <div class=\\\"ui-g ui-fluid\\\">\\n        \\n        <div class=\\\"ui-g-12\\\">\\n        \\t<div class=\\\"ui-g-4 links\\\">Eventname</div>\\n            <div class=\\\"ui-g-8\\\">\\n            \\t<input pInputText id=\\\"ename\\\" #ename placeholder=\\\"Eventname\\\">\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4 links\\\">Datum</div>\\n            <div class=\\\"ui-g-8\\\">\\n            \\t<input pInputText id=\\\"edatum\\\" #edatum placeholder=\\\"Datum\\\">\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4 links\\\">Ort</div>\\n            <div class=\\\"ui-g-8\\\">\\n            \\t<input pInputText id=\\\"eort\\\" #eort placeholder=\\\"Ort\\\">\\n            </div>\\n        </div>  \\n    </div>\\n    \\n    <p-footer>\\n        <div class=\\\"ui-g-5 ui-dialog-buttonpane ui-helper-clearfix\\\">\\n\\t\\t\\t<button pButton type=\\\"button\\\" label=\\\"Hinzufügen\\\" class=\\\"ui-button-success\\\"\\n\\t\\t\\t\\t\\t(click)=\\\"addEvent(ename.value, edatum.value, eort.value); ename.value = 'Eventname'; edatum.value = 'Datum'; eort.value = 'Ort';\\\"></button>\\n\\t\\t</div>\\n    </p-footer>\\n</p-dialog>\"","import { Component, OnInit } from '@angular/core';\nimport { Event } from '../../../Event';\nimport { EventloaderService } from '../../../eventloader.service';\nimport { SelectItem } from 'primeng/components/common/api';\n\n@Component({\n  selector: 'app-eventliste',\n  templateUrl: './eventliste.component.html',\n  styleUrls: ['./eventliste.component.css', './../../body.css', './../../../app.component.css']\n})\n\nexport class EventlisteComponent implements OnInit {\n\n  events: Event[];\n  datum: string[];\n\n  // f�r p-table\n  cols: any[];\n  anzFilter: number;\n  anzTimeout: any;\n  besucherFilter: number;\n  besucherTimeout: any;\n  selectedColumns: any[];\n  \n  // Hinzuf�ge-Button\n  newEvent: boolean;\n  event: Event;\n  displayDialog: boolean;\n\t\n  constructor(private eventloaderService: EventloaderService) { }\n\n  ngOnInit() {\n    this.getEvents();\n    \n    this.cols = [\n      { field: 'id', header: 'ID' },\n      { field: 'ename', header: 'Eventname' },\n      { field: 'edatum', header: 'Datum' },\n      { field: 'eort', header: 'Ort' },\n      { field: 'eanz', header: 'Anmeldungen' },\n      { field: 'besucher', header: 'Besucher' },\n      { field: 'admin', header: 'Admin' }\n    ];\n    \n    this.selectedColumns = [\n      { field: 'ename', header: 'Eventname' },\n      { field: 'edatum', header: 'Datum' },\n      { field: 'eort', header: 'Ort' },\n      { field: 'admin', header: 'Admin' }\n    ];\n  }\n\n  /* alle Events laden */\n  getEvents(): void {\n    this.eventloaderService.getEvents().subscribe(events => this.events = events);\n  }\n\n  /* Neues Event hinzuf�gen */\n  addEvent(name: string, date: string, ort: string): void {\n    \n    name = name.trim();\n    date = date.trim();\n    ort = ort.trim();\n  \n    // Zur�ck wenn ein Feld leer ist\n    if (!name || !date || !ort) { return; }\n    \n    this.eventloaderService.addEvent( { ename: name, edatum: date, eort: ort, eanz: 0, besucher: 0 } as Event)\n      .subscribe(event => {this.events.push(event);\n    });\n  }\n  \n  /* Achtung: �ndert Tabelle ohne auf Erfolg der Datanbank zu warten */\n  delete(event: Event): void {\n    this.events = this.events.filter(e => e !== event);\n    this.eventloaderService.deleteEvent(event).subscribe();\n  }\n  \n  /* Filter auf Anmeldungen nicht sofort anwenden */\n  onAnzChange(event, dt) {\n    if (this.anzTimeout) {\n        clearTimeout(this.anzTimeout);\n    }\n  \n    this.anzTimeout = setTimeout(() => {\n        dt.filter(event.value, 'eanz', 'gt');\n    }, 250);\n  }\n  \n  /* Filter auf Besucher nicht sofort anwenden */\n  onBesucherChange(event, dt) {\n    if (this.besucherTimeout) {\n        clearTimeout(this.besucherTimeout);\n    }\n  \n    this.besucherTimeout = setTimeout(() => {\n        dt.filter(event.value, 'besucher', 'gt');\n    }, 250);\n  }\n\t\n\t /* Hinzuf�ge-Dialog �ffnen */\n  showDialogToAdd() {\n        this.displayDialog = true;\n    }\n}\n","module.exports = \"\\r\\n\"","module.exports = \"<head>\\n\\t<meta http-equiv='content-type' content ='text/html; charset=utf-8'>\\n</head>\\n\\n<div *ngIf=\\\"person\\\">\\n\\t<div id=\\\"text\\\">\\n\\t\\t<h2>{{person.vname}} {{person.nname}}</h2>\\n\\t\\t\\n\\t\\t<p>Hier kann der Admin Personen komplett bearbeiten.</p>\\n\\t</div>\\n\\n\\t<div>\\n\\t\\n\\t\\t<!-- Bild -->\\n\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-3 ui-md-4 ui-sm-4\\\" id=\\\"bild\\\">\\n\\t\\t\\t<img src='{{person.imgurl}}' style=\\\"width:100%\\\">\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Informationen -->\\n\\t\\t<div class=\\\"ui-g-10\\\" id=\\\"infos\\\">\\n\\t\\t\\n\\t\\t\\t<div class=\\\"ui-g\\\">\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-5\\\" align=\\\"right\\\">Vorname:</div>\\n\\t\\t\\t\\t<div><input #vname pInputText value=\\\"{{person.vname}}\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"ui-g\\\">\\t\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-5\\\" align=\\\"right\\\">Nachname:</div>\\n\\t\\t\\t\\t<div><input #nname pInputText value=\\\"{{person.nname}}\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"ui-g\\\">\\t\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-5\\\" align=\\\"right\\\">Mail:</div>\\n\\t\\t\\t\\t<div><input #mail pInputText value=\\\"{{person.mail}}\\\" pattern=\\\"+@+.+\\\" placeholder=\\\"name@firma.de\\\" type=\\\"email\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"ui-g\\\">\\t\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-5\\\" align=\\\"right\\\">Firma:</div>\\n\\t\\t\\t\\t<div><input #firma pInputText value=\\\"{{person.firma}}\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"ui-g\\\">\\t\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-5\\\" align=\\\"right\\\">Bild-Url:</div>\\n\\t\\t\\t\\t<div><input #imgurl pInputText value=\\\"{{person.imgurl}}\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"ui-g\\\">\\t\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-5\\\" align=\\\"right\\\">Freigeschaltet:</div>\\n\\t\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-1 ui-l-2 ui-lg-2 ui-md-3 ui-sm-3\\\" [ngClass]=\\\"person.darf ? 'gut' : 'schlecht'\\\">{{person.darf}}</div>\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-unlock\\\"class=\\\"ui-button-success\\\" (click)=\\\"allow(true)\\\"></button>\\n\\t\\t\\t\\t\\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-lock\\\"class=\\\"ui-button-danger\\\" (click)=\\\"allow(false)\\\"></button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"ui-g\\\">\\t\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-5\\\" align=\\\"right\\\">VIP:</div>\\n\\t\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-1 ui-l-2 ui-lg-2 ui-md-3 ui-sm-3\\\" [ngClass]=\\\"person.vip ? 'gut' : 'schlecht'\\\">{{person.vip}}</div>\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-angle-double-up\\\" class=\\\"ui-button-success\\\" (click)=\\\"vip(true)\\\"></button>\\n\\t\\t\\t\\t\\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-angle-double-down\\\" class=\\\"ui-button-danger\\\" (click)=\\\"vip(false)\\\"></button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"ui-g\\\">\\t\\n\\t\\t\\t\\t<div class=\\\"ui-g-2 ui-xl-2 ui-l-3 ui-lg-4 ui-md-5 ui-sm-5\\\" align=\\\"right\\\">Gescannt:</div>\\n\\t\\t\\t\\t<div class=\\\"ui-g-1 ui-xl-1 ui-l-2 ui-lg-2 ui-md-3 ui-sm-3\\\"  [ngClass]=\\\"person.gescannt ? 'schlecht': 'gut'\\\">{{person.gescannt}}</div>\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-refresh\\\" class=\\\"ui-button-success\\\" (click)=\\\"scan(false)\\\"></button>\\n\\t\\t\\t\\t\\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-ban\\\" class=\\\"ui-button-danger\\\" (click)=\\\"scan(true)\\\" ></button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n\\t<!-- Buttons Zurück & Speichern -->\\n\\t<div class=\\\"ui-g-12\\\" style=\\\"margin: 5px\\\" id=\\\"buttons\\\">\\n\\t\\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-arrow-left\\\" label=\\\"Zurück\\\" class=\\\"ui-button-warning\\\" (click)=\\\"goBack()\\\"></button>\\n\\t\\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-check\\\" label=\\\"Änderungen speichern\\\" class=\\\"ui-button-success\\\" (click)=\\\"savePerson(vname.value, nname.value, mail.value, firma.value, imgurl.value)\\\"></button>\\n\\t</div>\\n</div>\\n\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Person } from '../../../person';\nimport { EventloaderService } from '../../../eventloader.service';\n\n@Component({\n  selector: 'app-editperson',\n  templateUrl: './editperson.component.html',\n  styleUrls: ['./editperson.component.css', './../../../app.component.css', './../../body.css']\n})\n\nexport class EditpersonComponent implements OnInit {\n\n  @Input() person: Person;\n\n  constructor(  private route: ActivatedRoute,\n                private eventloaderservice: EventloaderService,\n                private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    this.getPerson();\n\n  }\n\n  /* Person laden */\n  getPerson(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.eventloaderservice.getPerson(id).subscribe(person1 => this.person = person1);\n  }\n\n  /* Zur�ck zur Seite davor */\n  goBack(): void {\n    this.location.back();\n  }\n\n  /* umschalten ob freigeschaltet */\n  allow(bool: boolean): void {\n    this.person.darf = bool;\n  }\n\n  /* VIP umschalten */\n  vip(bool: boolean): void {\n    this.person.vip = bool;\n  }\n\n  /* gescannt umschalten */\n  scan(bool: boolean): void {\n    this.person.gescannt = bool;\n  }\n\n  /* �nderung speichern */\n  savePerson(vname: string, nname: string, mail: string, firma: string, imgurl: string) {\n    this.person.vname = vname;\n    this.person.nname = nname;\n    this.person.mail = mail;\n    this.person.firma = firma;\n    this.person.imgurl = imgurl;\n    this.eventloaderservice.updatePerson(this.person).subscribe(() => this.goBack());\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<head>\\n\\t<meta http-equiv='content-type' content ='text/html; charset=utf-8'>\\n</head>\\n\\n<!-- Text -->\\n<div style=\\\"margin: 5px\\\" id=\\\"text\\\">\\n\\t<h2>Personenliste</h2>\\n\\t<p>\\n\\t  Liste der Personen, die in der Datenbank sind - auch noch nicht freigeschaltene Personen und jene, deren Code bereits gescannt wurde.\\n\\t</p>\\n</div>\\n\\n<!-- p-table von PrimeNG -->\\n<div style=\\\"margin: 5px\\\" id=\\\"personen-tabelle\\\">\\n<p-table #dt [columns]=\\\"selectedColumns\\\" [value]=\\\"persons\\\" [paginator]=\\\"true\\\" [rows]=\\\"4\\\" [autoLayout]=true [responsive]=\\\"true\\\">\\n    <!-- globales Suchfeld -->\\n    <ng-template pTemplate=\\\"caption\\\">\\n\\t    \\t<div style=\\\"text-align:left\\\">\\n\\t            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\n\\t                        selectedItemsLabel=\\\"{0} Spalten ausgewählt\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Wähle Spalten\\\"></p-multiSelect>\\n\\t        </div>\\n\\t        <div style=\\\"text-align: right\\\">        \\n\\t            <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n\\t            <input type=\\\"text\\\" pInputText size=\\\"25\\\" placeholder=\\\"Global Filter\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" style=\\\"width:auto\\\">\\n\\t        </div>\\n    </ng-template>\\n    \\n    <!--  header der Tabelle -->\\n    <ng-template pTemplate=\\\"header\\\" let-columns>\\n        <tr>\\n        \\t<!-- Kopfzeile mit Beschriftung der Spalten -->\\n            <th *ngFor=\\\"let col of columns\\\">\\n                {{col.header}}\\n            </th>\\n        </tr>\\n        <tr>\\n        \\t<!-- Suchfelder der Spalten -->\\n            <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n                <input *ngSwitchCase=\\\"'id'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\" size=\\\"2\\\">\\n                <input *ngSwitchCase=\\\"'vname'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\" size=\\\"10\\\">\\n                <input *ngSwitchCase=\\\"'nname'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\" size=\\\"10\\\">\\n                <input *ngSwitchCase=\\\"'mail'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                <input *ngSwitchCase=\\\"'firma'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, 'contains')\\\">\\n                <p-dropdown *ngSwitchCase=\\\"'darf'\\\" [options]=\\\"bools\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value, col.field, 'equals')\\\"></p-dropdown>\\n                <p-dropdown *ngSwitchCase=\\\"'vip'\\\" [options]=\\\"bools\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value, col.field, 'equals')\\\"></p-dropdown>\\n                <p-dropdown *ngSwitchCase=\\\"'gescannt'\\\" [options]=\\\"bools\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value, col.field, 'equals')\\\"></p-dropdown>\\n            </th>\\n        </tr>\\n    </ng-template>\\n    \\n    <!-- der eigentliche Inhalt der Tabelle --> \\n    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n        <tr [pSelectableRow]=\\\"rowData\\\" align='center'>\\n            <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n            \\t<span class=\\\"ui-column-title\\\">{{col.header}}</span>\\n            \\t<div *ngSwitchCase=\\\"'id'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\" align='center'>{{rowData[col.field]}}</div>\\n                <div *ngSwitchCase=\\\"'vname'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">{{rowData[col.field]}}</div>\\n                <div *ngSwitchCase=\\\"'nname'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">{{rowData[col.field]}}</div>\\n                <div *ngSwitchCase=\\\"'mail'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">{{rowData[col.field]}}</div>\\n                <div *ngSwitchCase=\\\"'firma'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">{{rowData[col.field]}}</div>\\n                <div *ngSwitchCase=\\\"'imgurl'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\" align='center'><img src=\\\"{{rowData[col.field]}}\\\" height=\\\"50\\\" width=\\\"50\\\"></div>\\n                <div *ngSwitchCase=\\\"'darf'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\" align='center'>{{rowData[col.field]}}</div>\\n                <div *ngSwitchCase=\\\"'vip'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\" align='center'>{{rowData[col.field]}}</div>\\n                <div *ngSwitchCase=\\\"'gescannt'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\" align='center'>{{rowData[col.field]}}</div>\\n                <div *ngSwitchCase=\\\"'admin'\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\" align='center'>\\n                \\t<a routerLink=\\\"/editperson/{{rowData['id']}}\\\">\\n            \\t\\t\\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-warning\\\"></button>  \\n\\t            \\t</a>  \\n\\t            \\t<a routerLink=\\\"/personenliste\\\" routerLinkActive=\\\"active\\\">        \\n\\t            \\t\\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-times\\\" class=\\\"ui-button-danger\\\" title=\\\"deleteperson\\\" (click)=\\\"delete(rowData['id'])\\\"></button>\\n                \\t</a>\\n                </div>\\n            </td>\\n        </tr>\\n    </ng-template>\\n    \\n    <!-- footer -->\\n\\t<ng-template pTemplate=\\\"summary\\\">\\n        <div style=\\\"text-align:right\\\">\\n        \\n        \\t<div style=\\\"text-align:center\\\">\\n\\t       \\t\\t{{persons?.length}} Personen\\n\\t\\t\\t</div>\\n        \\n        \\t<button pButton type=\\\"button\\\" icon=\\\"pi pi-user-plus\\\" class=\\\"ui-button-warning\\\" title=\\\"addperson\\\" (click)=\\\"add()\\\" label=\\\"Irgendwen hinzufügen\\\"></button>\\n            <button type=\\\"button\\\" pButton icon=\\\"fa fa-plus\\\" (click)=\\\"showDialogToAdd()\\\" label=\\\"Per Einagbe hinzufügen\\\" class=\\\"ui-button-success\\\"></button>\\n        \\n        </div>\\n    </ng-template>\\n\\n</p-table>\\n</div>\\n\\n<!-- Dialogbox zum Hinzufügen -->\\n<p-dialog header=\\\"Personendetails\\\" [(visible)]=\\\"displayDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\" [width]=\\\"400\\\">\\n    <div class=\\\"ui-g ui-fluid\\\">\\n        \\n        <div class=\\\"ui-g-12\\\">\\n        \\t<div class=\\\"ui-g-4 links\\\">Vorname</div>\\n            <div class=\\\"ui-g-8\\\">\\n            \\t<input pInputText id=\\\"vname\\\" #vname placeholder=\\\"Vorname\\\">\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4 links\\\">Nachname</div>\\n            <div class=\\\"ui-g-8\\\">\\n            \\t<input pInputText id=\\\"nname\\\" #nname placeholder=\\\"Nachname\\\">\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4 links\\\">Mail</div>\\n            <div class=\\\"ui-g-8\\\">\\n            \\t<input pInputText id=\\\"mail\\\" #mail placeholder=\\\"Mail\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4 links\\\">Firma</div>\\n            <div class=\\\"ui-g-8\\\">\\n            \\t<input pInputText id=\\\"firma\\\" #firma placeholder=\\\"Firma\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4 links\\\">Bild-URL</div>\\n            <div class=\\\"ui-g-8\\\">\\n            \\t<input pInputText id=\\\"imgurl\\\" #imgurl placeholder=\\\"Bild-URL\\\">\\n            </div>\\n        </div>\\n    </div>\\n    \\n    <p-footer>\\n        <div class=\\\"ui-g-5 ui-dialog-buttonpane ui-helper-clearfix\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"Hinzufügen\\\" class=\\\"ui-button-success\\\"\\n            (click)=\\\"addPerson(vname.value, nname.value, mail.value, firma.value, imgurl.value); vname.value = 'Vorname'; nname.value = 'Nachname'; mail.value = 'E-Mail'; firma.value = 'Firma'; imgurl.value = 'Bild-URL';\\\"></button> \\n        </div>\\n    </p-footer>\\n</p-dialog>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Person } from '../../../Person';\nimport { EventloaderService } from '../../../eventloader.service';\nimport { SelectItem } from 'primeng/components/common/api';\n\n@Component({\n  selector: 'app-personenliste',\n  templateUrl: './personenliste.component.html',\n  styleUrls: ['./personenliste.component.css', './../../../app.component.css', './../../body.css']\n})\nexport class PersonenlisteComponent implements OnInit {\n  \n  persons: Person[];\n  count: number;\n  \n  // für p-table\n  cols: any[];\n  bools: SelectItem[];\n  selectedColumns: any[];\n  \n  // Hinzufüge-Button\n  newPerson: boolean;\n  person: Person;\n  displayDialog: boolean;\n\n  constructor(private eventloaderService: EventloaderService) {\n\n  }\n\n  ngOnInit() {\n    this.getPersons();\n    this.count = 0;\n    \n    this.cols = [\n      { field: 'id', header: 'ID' },\n      { field: 'vname', header: 'Vorname' },\n      { field: 'nname', header: 'Nachname' },\n      { field: 'mail', header: 'Mail' },\n      { field: 'firma', header: 'Firma' },\n      { field: 'imgurl', header: 'Bild' },\n      { field: 'darf', header: 'Freigeschalten' },\n      { field: 'vip', header: 'VIP' },\n      { field: 'gescannt', header: 'Gescannt' },\n      { field: 'admin', header: 'Admin' }\n    ];\n    \n    this.bools = [\n      { label: 'Alles', value: null },\n      { label: 'True', value: 'true' },\n      { label: 'False', value: 'false' }\n    ];\n    \n    this.selectedColumns = [\n      { field: 'vname', header: 'Vorname' },\n      { field: 'nname', header: 'Nachname' },\n      { field: 'mail', header: 'Mail' },\n      { field: 'firma', header: 'Firma' },\n      { field: 'imgurl', header: 'Bild' },\n      { field: 'admin', header: 'Admin' }\n    ];\n    \n  }\n\n  /* alle Personen laden */\n  getPersons(): void {\n    this.eventloaderService.getPersons().subscribe(persons => this.persons = persons);\n  }\n\n  /* einzelne person hinzufügen */\n  addPerson(vname: string, nname: string, mail: string, firma: string, imgurl: string): void {\n    \n    /* Leerzeichen entfernen */\n    vname = vname.trim();\n    nname = nname.trim();\n    mail = mail.trim();\n    firma = firma.trim();\n    imgurl = imgurl.trim();\n    \n    /* wenn ein Feld leer ist, nichts hinzuf�gen */\n    if (!vname || !nname || !mail || !firma) { return; }\n    \n    this.eventloaderService.addPerson( {  vname: vname,\n                                          nname: nname, \n                                          mail: mail, \n                                          firma: firma , \n                                          imgurl: imgurl, \n                                          darf: false , \n                                          vip: false, \n                                          gescannt: false} as Person)\n      .subscribe (person => { this.persons.push(person); }\n    );\n  }\n\n  /* Person löschen */\n  delete(person: Person): void {\n    this.persons = this.persons.filter(p => p !== person);\n    this.eventloaderService.deletePerson(person).subscribe();\n  }\n\n  /* vordefinierte Personen hinzufügen */\n  add(): void {\n    switch ( this.count ) {\n      case 0: {\n        this.eventloaderService.addPerson( {  vname: 'Rincewind',\n                                              nname: 'Zaubberer',\n                                              mail: 'zaubberer@uuni.amp', \n                                              firma: 'Unsichtbare Universität', \n                                              imgurl: 'https://www.fischundfleisch.com/avatar/9987/300/rincewind.jpg', \n                                              darf: false, \n                                              vip: true,\n                                              gescannt: false } as Person)\n        .subscribe (person => { this.persons.push(person); } );\n        this.count++; break;\n      }\n      case 1: {\n        this.eventloaderService.addPerson( {  vname: 'Ash',\n                                              nname: 'Ketchum',\n                                              mail: 'pokemeister@eichgmbh.jo', \n                                              firma: 'Eich GmbH', \n                                              imgurl: 'https://orig00.deviantart.net/5888/f/2016/098/5/2/ash_ketchum_by_seanklaskyn64-d9y7tzy.png', \n                                              darf: false, \n                                              vip: false,\n                                              gescannt: false } as Person)\n       .subscribe (person => { this.persons.push(person); } );\n        this.count++; break;\n      }\n      case 2: {\n        this.eventloaderService.addPerson( {  vname: 'Stuart',\n                                              nname: 'Minion',\n                                              mail: '7326@minions.gru', \n                                              firma: 'GruRocks', \n                                              imgurl: 'https://www.amscan.co.uk/graphics_cache/6/3/48782-3265501-3-600.jpg', \n                                              darf: false, \n                                              vip: false,\n                                              gescannt: false } as Person)\n       .subscribe (person => { this.persons.push(person); } );\n        this.count++; break;\n      }\n    }\n  }\n  \n  /* Hinzufüge-Dialog öffnen */\n  showDialogToAdd() {\n        this.newPerson = true;\n        this.person;\n        this.displayDialog = true;\n    }\n\n}\n","export class Event {\n  id: number;\n  ename: string;\n  eort: string;\n  edatum: string;\n  eanz: number;\n  besucher: number;\n}","/* Angular */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n/* rxjs */\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n/* meins */\nimport { Event } from './event';\nimport { Person } from './person';\nimport { MessageService } from './message.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json',\n                              'Access-Control-Allow-Origin': '*' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EventloaderService {\n\n  /* URL zur Web API mit der Eventliste / Aufgabe*/\n//  private eventsUrl = 'https://localhost:3306/api/events';\n  private eventsUrl = 'api/events';\n  private aufgabeUrl = 'api/aufgabe';\n  private personsUrl = 'api/persons';\n\n  constructor(private http: HttpClient,\n              private messageService: MessageService) { }\n  \n/* Für die Eventliste */\n  /* alle Events laden */\n  getEvents(): Observable<Event[]> {\n    return this.http.get<Event[]>(this.eventsUrl)\n      .pipe(tap(persons => this.log('geladen: events')), catchError(this.handleError('getEvents', [])));\n  }\n\n  /* Event hinzufügen */\n  addEvent(event: Event): Observable<Event> {\n    /* event ohne id zur DB schicken, dort wird automatisch die Variable gesetzt - sie muss exakt \"id\" heißen ! */\n    return this.http.post<Event>(this.eventsUrl, event, httpOptions).pipe(\n      tap((event1: Event) => this.log(`hinzugefügt: Event mit der ID ${event.id}`)),\n      catchError(this.handleError<Event>(`addEvent`))\n    );\n  }\n  \n  /* lösche Event */\n  deleteEvent(event: Event | number): Observable<Event> {\n    const id = typeof event === 'number' ? event : event.id;\n    const url = `${this.eventsUrl}/${id}`;\n    return this.http.delete<Event>(url, httpOptions).pipe(\n      tap(_ => this.log(`entferne Event mit der ID=${id}`)),\n      catchError(this.handleError<Event>(`deleteEvent`))\n    );\n  }\n\n/* für den Event - Editor */\n  /* einzelnes Event laden */\n  getEvent(id: number): Observable<Event> {\n    const url = `${this.eventsUrl}/${id}`;\n    return this.http.get<Event>(url).pipe(\n      tap(_ => this.log(`geladenes Event ID=${id}`)),\n      catchError(this.handleError<Event>(`getEvent ID=${id}`))\n    );\n  }\n  \n  /* ändere Event */\n  updateEvent(event: Event): Observable<Event> {\n    return this.http.put(this.eventsUrl, event, httpOptions).pipe(\n      tap(_ => this.log(`geändertes Event ID=${event.id}`)),\n      catchError(this.handleError<any>(`updateEvent`))\n    );\n  }\n  \n/* Für die Personenliste */\n  \n  getPerson(id: number): Observable<Person> {\n    const url = `${this.personsUrl}/${id}`;\n    return this.http.get<Person>(url).pipe(\n      tap(_ => this.log(`geladene Person ID=${id}`)),\n      catchError(this.handleError<Person>(`getPerson ID=${id}`))\n    );\n  }\n  \n  /* Update der Person an DB schicken */\n  updatePerson(person: Person): Observable<Person> {\n    return this.http.put<Person>(this.personsUrl, person, httpOptions).pipe(\n      tap(_ => this.log(`geänderte Person ID=${person.id}`)),\n      catchError(this.handleError<any>(`updatePerson`))\n    );\n  }\n  \n  /* einzelne Person laden */\n  getPersons(): Observable<Person[]> {\n    return this.http.get<Person[]>(this.personsUrl)\n      .pipe(tap(persons => this.log('geladen: persons')), catchError(this.handleError('getPersons', [])));\n  }\n  \n  /* Person hinzufügen */\n  addPerson(person: Person): Observable<Person> {\n    /* person ohne id zur DB schicken, dort wird automatisch die Variable gesetzt - sie muss exakt \"id\" heißen ! */\n    return this.http.post<Person>(this.personsUrl, person, httpOptions).pipe(\n      tap((person1: Person) => this.log(`hinzugefügt: Person mit ID= ${person1.id}`)),\n      catchError(this.handleError<Person>('addPerson, []'))\n    );\n  }\n  \n  /* Person löschen */\n  deletePerson(person: Person | number): Observable<Person> {\n    const id = typeof person === 'number' ? person : person.id;\n    const url = `${this.personsUrl}/${id}`;\n    return this.http.delete<Person>(url, httpOptions).pipe(\n      tap(_ => this.log(`entferne Person mit der ID=${id}`)),\n      catchError(this.handleError<Person>(`deletePerson`))\n    );\n  }\n  \n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      console.error(error); // log to console instead\n      \n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }  \n  \n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`Eventloader: ${message}`);\n  }\n}\n","module.exports = \"\\r\\nh1 {\\r\\n\\tcolor: green !important;\\r\\n}\\r\\n\\r\\n.but {\\r\\n\\tbackground-color: green !important;\\r\\n\\tborder-color: lightgreen !important;\\r\\n\\twidth: 100px;\\r\\n}\\r\\n\\r\\n.but:hover {\\r\\n\\tbackground-color: darkgreen !important;\\r\\n\\t\\r\\n}\\r\\n\\r\\n.navi {\\r\\n\\tposition: absolute;\\r\\n\\tright: 30px;\\r\\n}\\r\\n\\r\\ndiv {\\r\\n/*\\tborder: 1px solid #73AD21 !important; */\\r\\n}\"","module.exports = \"<div class=\\\"ui-g-12\\\">\\n\\n\\t<!-- Menü einbinden -->\\n\\t<div class=\\\"ui-g-1 ui-xl-1 ui-l-1 ui-lg-1 ui-md-2 ui-sm-2\\\">\\n\\t\\t<app-menu></app-menu>\\n\\t</div>\\n\\t\\n\\t<!-- Logo -->\\n\\t<div class=\\\"ui-g-1 ui-xl-1 ui-l-1 ui-lg-1 ui-md-1 ui-sm-2\\\">\\n\\t\\t<img alt=\\\"logo\\\" style=\\\"width:50px\\\" src='./../../../Images/logo-kl.png' align=\\\"right\\\">\\n\\t</div>\\n\\t\\n\\t<!-- Firmenname -->\\n\\t<div class=\\\"ui-g-4 ui-xl-4 ui-l-4 ui-lg-5 ui-md-5 ui-sm-6\\\">\\n\\t\\t<h1>{{ firmenname }}</h1>\\n\\t</div>\\n\\t\\n\\t<!-- Kontakt, Login, etc -->\\n\\t<div class=\\\"ui-g-2 \\t\\n\\t\\t\\t\\tui-xl-3 \\n\\t\\t\\t\\tui-l-3 \\t\\n\\t\\t\\t\\tui-lg-4 \\n\\t\\t\\t\\tui-md-4 \\n\\t\\t\\t\\tui-sm-12 \\n\\t\\t\\t\\tpull-right\\\" align=\\\"right\\\">\\n\\t\\t\\n\\t\\t<a routerLink=\\\"/kontakt\\\">\\n\\t\\t\\t<button pButton class=\\\"ui-button-success but\\\" label=\\\"Kontakt\\\" ></button>\\n\\t\\t</a>\\n\\t\\t\\n\\t\\t<a routerLink=\\\"/login\\\">\\n\\t\\t\\t<button pButton class=\\\"ui-button-success but\\\" label=\\\"Login\\\"></button>\\n\\t\\t</a>\\n\\t\\t\\n\\t</div>\\t\\t\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: [  'header.component.css', './../app.component.css']\n})\n\nexport class HeaderComponent  { \n\n  firmenname = 'easyBall';\n\n  constructor() { }\n\n\n}\n","module.exports = \"div {\\r\\n\\tmargin: 15px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<head>\\r\\n\\t<meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=utf-8\\\">\\r\\n</head>\\r\\n\\r\\n<div id=\\\"anschrift\\\">\\r\\n\\t<div>\\r\\n\\t\\t<i class=\\\"fa fa-map-marker\\\"></i>\\r\\n\\t\\t<strong> Anschrift</strong>\\r\\n\\t</div>\\r\\n\\t<div>\\r\\n\\t\\tThomas-Müntzer-Straße 15, 12489 Berlin\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"telefon\\\">\\r\\n\\t<div >\\r\\n\\t\\t<i class=\\\"fa fa-phone\\\"></i>\\r\\n\\t\\t<strong> Telefon</strong>\\r\\n\\t</div>\\r\\n\\t<div>\\r\\n\\t\\t030 123456789\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"mail\\\">\\r\\n\\t<div >\\r\\n\\t\\t<i class=\\\"pi pi-pencil\\\"></i>\\r\\n\\t\\t<strong> Mail</strong>\\r\\n\\t</div>\\r\\n\\t<div>\\r\\n\\t\\tmail@easyball.de\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div id=\\\"map\\\">\\r\\n\\t<iframe src=\\\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1216.195070728122!2d13.54545547205275!3d52.43584707146893!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47a8462ba06ebc89%3A0x6f278b5d03eedba1!2sThomas-M%C3%BCntzer-Stra%C3%9Fe+15%2C+12489+Berlin!5e0!3m2!1sde!2sde!4v1534079686021\\\"\\r\\n\\t\\t\\twidth=\\\"100%\\\" height=\\\"400px\\\" frameborder=\\\"0\\\" style=\\\"border:0\\\" allowfullscreen></iframe>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-kontakt',\n  templateUrl: './kontakt.component.html',\n  styleUrls: ['./../../app.component.css', './kontakt.component.css', './../header.component.css']\n})\n  \nexport class KontaktComponent implements OnInit {\n  \n  options: any;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>Aufgrund eines fehlendes Backends zur Zeit ohne Funktion.</p>\\r\\n\\r\\n<form (submit)=\\\"loginUser($event)\\\">\\r\\n\\t<input pInputText placeholder=\\\"Benutzername\\\" id=\\\"nutzer\\\" value=\\\"admin\\\"/><br>\\r\\n\\t<input pInputText placeholder=\\\"Passwort\\\" id=\\\"pw\\\" value=\\\"admin\\\"/><br>\\r\\n\\t<button pButton type=\\\"button\\\" class=\\\"ui-button-success\\\" label=\\\"Login\\\"></button>\\r\\n</form>\"","import { AuthService } from '../../auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css', './../../app.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  constructor(private Auth: AuthService) { }\n\n  ngOnInit() {\n  }\n  \n  loginUser1(event) {\n    event.preventDefault();\n    const target = event.target;\n    \n    const nutzer = target.querySelector('nutzer.value');\n    const pw = target.querySelector('pw.value');\n    \n    this.Auth.getUserDetails(nutzer, pw);\n    console.log(nutzer, pw);\n  }\n  \n  loginUser(event) {\n    \n  }\n\n\n}\n","module.exports = \".menuicon {\\r\\n\\theight: 100%px !important;\\r\\n\\tbackground-color: green !important;\\r\\n\\tborder-radius: 5px;\\r\\n\\tborder: 1px solid lightgreen;\\r\\n\\tcolor: white !important;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<head>\\n\\t<meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=utf-8\\\">\\n</head>\\n\\n<span>\\n    <p-menu #menu popup=\\\"popup\\\" [model]=\\\"items\\\"></p-menu>\\n    <i class=\\\"pi pi-bars action-list-icon menuicon\\\" style=\\\"font-size: 3em;\\\" (click)=\\\"menu.toggle($event)\\\"></i>\\n</span>\\n\"","import { Component, OnInit, NgModule } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\n\n@NgModule({\n    imports:      [],\n    declarations: [ MenuComponent ],\n    bootstrap:    [ MenuComponent ]\n})\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css', './../header.component.css', './../../app.component.css']\n})\n  \nexport class MenuComponent implements OnInit {\n  \n  items1: MenuItem[];\n  items2: MenuItem[];\n  items: MenuItem[];\n\n  constructor() { }\n\n  ngOnInit() {\n    \n    // Eintr�ge im Men�\n    this.items = [\n            {\n                label: 'Aufgabe', \n                icon: 'fa fa-fw fa-book', \n                routerLink: '/aufgabe'},\n            {\n                label: 'Eventliste', \n                icon: 'fa fa-fw fa-bar-chart', \n                routerLink: '/eventliste'},\n            {\n                label: 'Personenliste', \n                icon: 'fa fa-fw fa-bar-chart', \n                routerLink: '/personenliste'},\n            {\n                label: 'QR Generator', \n                routerLink: '/qrgenerator'},\n            {\n                label: 'QR Scanner', \n                routerLink: '/qrscanner'},\n        ];\n    \n    }\n\n}\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\n\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    /* vorgefertigte Events */\n    const events = [\n      { id: 0, ename: 'Freibier' , eort: 'easyCube', edatum: '6.8.2018', eanz: 7, besucher: 0 },\n      { id: 1, ename: 'BER-Eröffnung', eort: 'Schönefeld', edatum: '1.1.2100', eanz: 0, besucher: 0 },\n      { id: 2, ename: 'Drittes Event', eort: 'Holzmarktstraße', edatum: '8.8.2018', eanz: 6, besucher: 6 }\n    ];\n    \n    /* vorgefertigte Personen */\n    const persons = [\n      { id: 0, vname: 'Bud', nname: 'Spencer', mail: 'hau@kopf.it', firma: 'Filmcrew',\n        imgurl: 'https://ih1.redbubble.net/image.368405967.1798/st%2Csmall%2C215x235-pad%2C210x230%2Cf8f8f8.lite-1u3.jpg',\n        darf: true , vip: true, gescannt: false},\n      { id: 1, vname: 'Dave', nname: 'Minion', mail: '6921@minions.gru', firma: 'GruRocks',\n        imgurl: 'https://images-na.ssl-images-amazon.com/images/I/41HPFwV%2BdYL._SY355_.jpg',\n        darf: false , vip: false, gescannt: true}\n    ];\n    return {persons, events};\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}","module.exports = \"div {\\r\\n/*\\tborder: 1px solid #73AD21 !important; */\\r\\n}\\r\\n\\r\\nh2 {\\r\\n\\tcolor: green !important;\\r\\n}\"","module.exports = \"<head>\\n\\t<meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=utf-8\\\">\\n</head>\\n\\n<div class=\\\"ui-g-12\\\" id=\\\"text\\\">\\n\\t<h2>Debuglog</h2>\\n</div>\\n\\n<div *ngIf=\\\"messageService.messages.length\\\">  \\n  \\n\\t<button pButton type=\\\"button\\\" label=\\\"Clear\\\" class=\\\"ui-button-warning\\\" (click)=\\\"messageService.clear()\\\"></button>\\n\\t\\n\\t<div *ngFor='let message of messageService.messages' class=\\\"ui-g-12\\\">\\n\\t\\t{{message}}\\n\\t</div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css', './../app.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Person {\n  id: number;\n  vname: string;\n  nname: string;\n  mail: string;\n  firma: string;\n  imgurl: string;\n  darf: boolean;\n  vip: boolean;\n  gescannt: boolean;\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}